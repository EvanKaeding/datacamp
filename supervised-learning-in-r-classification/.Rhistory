myExploratoryData <- read.csv("~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory-r.csv"")
# get a quick snapshot of your data
# shift the names to each row
# review that transformation
# transform into a matrix
# generate our heatmap
)
quit()
""
myExploratoryData <- read.csv("~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory-r.csv")
View(myExploratoryData)
source('~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory.r')
head(myExploratoryData)
source('~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory.r')
row.names(myExploratoryData) <- myExploratoryData$keyword
View(myExploratoryData)
source('~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory.r')
head(myExploratoryData)
source('~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory.r')
myDataMatrix <- data.matrix(myExploratoryData)
source('~/Projects/Lynda/data-science-marketing/Exercise_Files/02_02/exploratory.r')
library(datasets)
mtcars <- mtcars
library(ggplot)
library(tidyverse)
sub4 <- cleaned %>%
select(Email, Create.Date, Lead.Source,
Lifecycle.Stage, Lead.Status, Unqualified.reason) %>%
filter(Lead.Source != "Offline Sources") %>%
filter(Lifecycle.Stage == "Lead",
Lead.Status == "Unqualified") %>%
group_by(Unqualified.reason)
source('~/Projects/cooladata/marketing/june-july-demos/import-hubspot.R')
cleaned <- import_hubspot("hubspot-data.csv")
sub4 <- cleaned %>%
select(Email, Create.Date, Lead.Source,
Lifecycle.Stage, Lead.Status, Unqualified.reason) %>%
filter(Lead.Source != "Offline Sources") %>%
filter(Lifecycle.Stage == "Lead",
Lead.Status == "Unqualified") %>%
group_by(Unqualified.reason)
ggplot(data = sub4, mapping = aes(x = Unqualified.reason)) +
geom_bar(position = "dodge") +
coord_flip()
library(tidyverse)
?geom_text
sub1 <- cleaned %>%
filter(Lifecycle.Stage %in% c("Lead", "Marketing Qualified Lead",
"Sales Qualified Lead",
"Opportunity")) %>%
filter(Lead.Source != "Offline Sources") %>%
select(Email, Lifecycle.Stage, Lead.Status) %>%
group_by(Lifecycle.Stage) %>%
summarize(Count = n())
source('~/Projects/cooladata/marketing/june-july-demos/import-hubspot.R')
cleaned <- import_hubspot("hubspot-data.csv")
sub1 <- cleaned %>%
filter(Lifecycle.Stage %in% c("Lead", "Marketing Qualified Lead",
"Sales Qualified Lead",
"Opportunity")) %>%
filter(Lead.Source != "Offline Sources") %>%
select(Email, Lifecycle.Stage, Lead.Status) %>%
group_by(Lifecycle.Stage) %>%
summarize(Count = n())
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text()
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count, label = Count/sum(Count))) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text()
?sprintf
?format
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count, label = format(Count/sum(Count)), digits = 4)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text()
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count, label = format(Count/sum(Count)), digits = 2)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text()
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = Count/sum(Count))))
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = Count/sum(Count)))
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = sprintf("%1.2f%%", Count/sum(Count))))
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = sprintf("%1.2f%%", Count/sum(Count)*100)))
sub3 <- cleaned %>%
select(Email, Create.Date, Lead.Source,
Lifecycle.Stage, Lead.Status) %>%
filter(Lead.Source != "Offline Source") %>%
filter(Lifecycle.Stage == "Lead") %>%
group_by(Lead.Status) %>%
summarize(Count = n())
ggplot(data = sub3, mapping = aes(x = Lead.Status, y = Count)) +
geom_bar(stat = "identity") +
coord_flip()
sub3 <- cleaned %>%
select(Email, Create.Date, Lead.Source,
Lifecycle.Stage, Lead.Status) %>%
filter(Lead.Source != "Offline Source") %>%
filter(Lifecycle.Stage == "Lead") %>%
group_by(Lead.Status) %>%
summarize(Count = n())
ggplot(data = sub3, mapping = aes(x = Lead.Status, y = Count)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = sub3, mapping = aes(x = Lead.Status, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = sprintf("%1.2f%%", Count/sum(Count)*100)))
sub1 <- cleaned %>%
filter(Lifecycle.Stage %in% c("Lead", "Marketing Qualified Lead",
"Sales Qualified Lead",
"Opportunity")) %>%
filter(Lead.Source != "Offline Sources") %>%
select(Email, Lifecycle.Stage, Lead.Status) %>%
group_by(Lifecycle.Stage) %>%
summarize(Count = n())
ggplot(data = sub1, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = sprintf("%1.2f%%", Count/sum(Count)*100)))
sub7 <- cleaned %>%
select(Email,
Lead.Status, Lead.Source,
Lifecycle.Stage) %>%
filter(Lead.Source != "Offline Sources") %>%
filter(Lead.Status == "Scheduled") %>%
summarize(Count = n())
ggplot(data = sub7, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar() +
coord_flip()
summarize(Count = n())
View(sub7)
sub7 <- cleaned %>%
select(Email, Lead.Status, Lead.Source, Lifecycle.Stage) %>%
filter(Lead.Source != "Offline Sources") %>%
filter(Lead.Status == "Scheduled") %>%
group_by(Lifecycle.Stage) %>%
summarize(Count = n())
ggplot(data = sub7, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar() +
coord_flip()
ggplot(data = sub7, mapping = aes(x = Lifecycle.Stage, y = Count)) +
geom_bar(stat = "identity") +
coord_flip()
sub2 <- cleaned %>%
filter(Lifecycle.Stage == "Lead") %>%
filter(Lead.Source != "Offline Sources") %>%
select(Lead.Status, Lifecycle.Stage) %>%
group_by(Lead.Status)
ggplot(data = sub1, mapping = aes(x = Lead.Status)) +
geom_bar() +
facet_grid(.~ Lifecycle.Stage, scales = "free_x") +
coord_flip()
sub1 <- cleaned %>%
filter(Lifecycle.Stage %in% c("Lead", "Marketing Qualified Lead",
"Sales Qualified Lead",
"Opportunity")) %>%
filter(Lead.Source != "Offline Sources") %>%
select(Email, Lifecycle.Stage, Lead.Status) %>%
group_by(Lifecycle.Stage) %>%
summarize(Count = n())
l <- c("MQL", "SQL")
c <- c(40, 15)
d <- data.frame(l, c)
d
?qplot
qplot(d, l, c)
qplot(d, l, c, geom = "bar")
ggplot(data = d, mapping = aes(x = l, y = c)) +
geom_bar()
ggplot(data = d, mapping = aes(x = l, y = c)) + geom_bar(stat = "identity")
ggplot(data = d, mapping = aes(x = l, y = c)) + geom_bar(stat = "identity") + ggtitle("MQL to SQL Conversion")
ggplot(data = d, mapping = aes(x = l, y = c)) + geom_bar(stat = "identity") + ggtitle("MQL to SQL Conversion") + xlab("Lifecycle Stage") + ylab("Count")
?rnorm
u <- c("Budget too Small", "No Need/Interest", "Language Barrier", "Happy with Current Solution", "Non-responsive", "Wrong email/phone number")
c <- c(10, 7, 1, 2, 5)
c <- c(10, 7, 1, 2, 2, 3)
sum(c)
d2 <- data.frame(u, c)
ggplot(data = d2, mapping = aes(x = u, y = c)) + geom_bar(stat = "identity") + coord_flip() + ggtitle("Unqualified Reasons") + xlab("Unqualified Reasons") + ylab("Count")
head(cleaned$Lead.Status)
knitr::opts_chunk$set(echo = TRUE)
source('~/Projects/cooladata/marketing/hubspot-functions/import_hubspot_contacts.R')
library(tidyverse)
library(knitr)
library(lubridate)
library(scales)
cleaned <- import_hubspot_contacts("hubspot-contacts.csv")
levels(as.factor(cleaned$Industry))
?datasets
library(help = "datasets")
library(Oxboys)
library(iris)
library(nlme)
head(Oxboys)
summary(Oxboys)
str(Oxboys)
?lme
model <- lme(fixed = height ~ age, data = Oxboys)
model <- lme(fixed = height ~ age, data = Oxboys, random = ~ 1 + age | Subject)
random = ~ 1
class(random)
rm("random")
age_grid <- seq(-1, 1, length = 10)
subjects <- unique(Oxboys$Subject)
class(age_grid)
str(age_grid)
?expand.grid
mean(age_grid)
preds <- expand.grid(age = age_grid, Subject = subjects)
head(preds)
tail(preds)
preds$height <- predict(model, preds)
head(preds)
library(ggplot2)
oplot <- ggplot(data = Oxboys, aes(x = age, y = height, group = Subject)) +
geom_line()
class(oplot)
summary(oplot)
oplot
?geom_line
oplot + geom_line(data = preds, colour = "#3366FF", size = 0.4)
Oxboys$fitted <- predict(model)
Oxboys$resid <- with(Oxboys, fitted - height)
?geom_smooth
oplot + %+% Oxboys + aes(y = resid) + geom_smooth(aes(group = 1))
oplot %+% Oxboys + aes(y = resid) + geom_smooth(aes(group = 1))
oplot %+% Oxboys + aes(y = resid) #+ geom_smooth(aes(group = 1))
oplot %+% Oxboys + aes(y = resid) + geom_smooth()
oplot %+% Oxboys + aes(y = resid) + geom_smooth(aes(group = 1))
?I
model2 <- update(model, height ~ age + I(age ^ 2))
summary(model2)
summary(model2)
summary(model)
Oxboys$fitted2 <- predict(model2)
Oxboys$resid2 <- with(Oxboys, fitted2 - height)
oplot %+% Oxboys + aes(y = resid2) + geom_smooth(mapping = aes(group = 1))
?lme
getwd()
setwd("~/Projects/ggplot2")
head(Oxboys)
boysbox <- ggplot(data = Oxboys, aes(x = Occasion, y = height)) +
geom_boxplot()
boysbox
boysbox + geom_line(aes(group = Subject), colour = "#3366FF")
setwd("~/Projects/datacamp/supervised-learning-in-r")
?relevel
summary(glm(donated ~ wealth_rating, data = donors, family = "binomial"))
?round
round(6.984859, digits = 2)
?predict
?step_model
?step
?download.file
getwd()
download.file(url = "https://assets.datacamp.com/production/course_2906/datasets/loans.csv",
destfile = "lending-club.csv", method = "curl")
?read.csv
loans <- read.csv(file = "lending-club.csv", header = TRUE, stringsAsFactors = TRUE)
loans <- read.csv(file = "lending-club.csv", stringsAsFactors = TRUE)
library(rpart)
?substitute
?deparse
