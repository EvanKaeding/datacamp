{
    "collab_server" : "",
    "contents" : "## Decision Trees\n\ndownload.file(url = \"https://assets.datacamp.com/production/course_2906/datasets/loans.csv\",\n              destfile = \"lending-club.csv\", method = \"curl\")\n\nloans <- read.csv(file = \"lending-club.csv\", stringsAsFactors = TRUE)\n\n## Build a decision tree for predictive classification of loan outcomes\n\n# Load the rpart package\n\nlibrary(rpart)\n\n# Build a lending model predicting loan outcome versus loan amount and credit score\n\nloan_model <- rpart(outcome ~ loan_amount + credit_score, \n                    data = loans, method = \"class\", \n                    control = rpart.control(cp = 0))\n\n# Make a prediction for someone with good credit - good_credit is a data.frame\n# with values LOW for loan_amount and HIGH for credit_score\n\npredict(loan_model, good_credit, type = \"class\")\n\n# Make a prediction for someone with bad credit\n\npredict(loan_model, bad_credit, type = \"class\")\n\n## Plotting the decision tree\n\n# Examine the loan_model object\n\nloan_model\n\n# Load the rpart.plot package\n\nlibrary(rpart.plot)\n\n# Plot the loan_model with default settings\n\nrpart.plot(loan_model)\n\n# Plot the loan_model with customized settings\n\nrpart.plot(loan_model, type = 3, \n           box.palette = c(\"red\", \"green\"), \n           fallen.leaves = TRUE)\n\n## Create a test and training dataset\n\n# Determine the number of rows for training\n\nnrow(loans) * 0.75\n\n# Create a random sample of row IDs\n\nsample_rows <- sample(nrow(loans), 8484)\n\n# Create the training dataset\n\nloans_train <- loans[sample_rows,]\n\n# Create the test dataset\n\nloans_test <- loans[-sample_rows,]\n\n## Building and evaluating a larger tree\n\n# The 'rpart' package is loaded into the workspace\n# The loans_train and loans_test datasets have been created\n\n# Grow a tree using all of the available applicant data\n\nloan_model <- rpart(outcome ~ ., data = loans_train, method = \"class\", control = rpart.control(cp = 0))\n\n# Make predictions on the test dataset\n\nloans_test$pred <- predict(loan_model, loans_test, type = \"class\")\n\n# Examine the confusion matrix\n\ntable(loans_test$pred, loans_test$outcome)\n\n# Compute the accuracy on the test dataset\n\nmean(loans_test$pred == loans_test$outcome)\n\n## Prepruning trees\n\n# The 'rpart' package is loaded into the workspace\n\n# Grow a tree with maxdepth of 6\n\nloan_model <- rpart(outcome ~ ., data = loans_train, method = \"class\", control = rpart.control(maxdepth = 6, cp = 0))\n\n# Compute the accuracy of the simpler tree\n\nloans_test$pred <- predict(loan_model, loans_test, type = \"class\")\n\nmean(loans_test$outcome == loans_test$pred)\n\n\n# Grow a tree with minsplit of 500\n\nloan_model2 <- rpart(outcome ~ ., data = loans_train, method = \"class\", control = rpart.control(minsplit = 500, cp = 0))\n\n# Compute the accuracy of the simpler tree\n\nloans_test$pred2 <- predict(loan_model2, loans_test, type = \"class\")\n\nmean(loans_test$pred2 == loans_test$outcome)\n\n## Postpruning a tree\n\n# The 'rpart' package is loaded into the workspace\n\n# Grow an overly complex tree\n\nloan_model <- rpart(outcome ~ ., data = loans_train, method = \"class\", control = rpart.control(cp = 0))\n\n# Examine the complexity plot\n\nplotcp(loan_model)\n\n# Prune the tree\n\nloan_model_pruned <- prune(loan_model, cp = 0.0014)\n\n# Compute the accuracy of the pruned tree\n\nloans_test$pred <- predict(loan_model_pruned, loans_test, type = \"class\")\n\nmean(loans_test$pred == loans_test$outcome)\n\n## Random forests\n\n# Load the randomForest package\n\nlibrary(randomForest)\n\n# Build a random forest model\n\nloan_model <- randomForest(outcome ~ ., data = loans_train)\n\n# Compute the accuracy of the random forest\n\nloans_test$pred <- predict(loan_model, loans_test)\n\nmean(loans_test$pred == loans_test$outcome)",
    "created" : 1514580760984.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2572640604",
    "id" : "94CAB066",
    "lastKnownWriteTime" : 1514752086,
    "last_content_update" : 1514752086691,
    "path" : "~/Projects/datacamp/supervised-learning-in-r/decision-trees.R",
    "project_path" : "decision-trees.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}